{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.d619bc24048d65160897.hot-update.js","sources":["webpack:///./components/product-page.js"],"sourcesContent":["import React from 'react';\r\nimport ProductCard from './product-card';\r\nimport productService from '../services/ProductService';\r\nimport ProductForm from './product-form';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\n\r\nclass ProductPage extends React.Component {\r\n\r\n    constructor(props){\r\n        super();\r\n        this.productService = productService;\r\n        this.state = {\r\n            products: [],\r\n            isOpenProductForm: false\r\n        };\r\n        this.refreshProducts();\r\n    }\r\n\r\n    refreshProducts(){\r\n        this.productService.getList().then(data => {\r\n            this.setState({products: data});\r\n        });\r\n    }\r\n\r\n    getProducts(){\r\n        return this.state.products;\r\n    }\r\n\r\n    handleCreateProductClick(){\r\n        this.setState({isOpenProductForm: true});\r\n    }\r\n\r\n    getProductForm(){\r\n        return(\r\n            <React.Fragment>\r\n                <ProductForm handleForm={(e) => {this.handleForm(e)}} />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    handleForm(e){\r\n        if(e.isSubmit){\r\n            productService.create(e.data).then(\r\n                data => {\r\n                    this.setState({isOpenProductForm: false});\r\n                    if(data.id){\r\n                        const products = this.state.products.slice();\r\n                        products.push(data);\r\n                        this.setState({\r\n                            products: products\r\n                        });\r\n                    }\r\n                }\r\n            );\r\n        }else{\r\n            this.setState({isOpenProductForm: false});\r\n        }\r\n    }\r\n\r\n    getProductsOverview(){\r\n        return(\r\n            <React.Fragment>\r\n                <div className=\"button-list pb-4\">\r\n                    <button className=\"btn btn-info\" onClick={() => this.handleCreateProductClick()}>Create product</button>\r\n                </div>\r\n                {this.getProducts().map((value, index) => {\r\n                    return <ProductCard key={value.id} name={value.name} description={value.description} />\r\n                })}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    render(){\r\n        let view;\r\n        if(this.state.isOpenProductForm){\r\n            view = this.getProductForm();\r\n        }else{\r\n            view = this.getProductsOverview();\r\n        }\r\n        return(\r\n            <div>\r\n                <Router>\r\n                    {view}\r\n                </Router>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ProductPage;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AACA;AAGA;AACA;AARA;AAQA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;AAEA;AAAA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;;;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AAhFA;AACA;AAmFA;;;;A","sourceRoot":""}